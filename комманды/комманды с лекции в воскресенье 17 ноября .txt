----------------------Работа с локальным репозиторием---------------------------
создание проекта mkdir instruct_new_lesson_411
переход в папку cd instruct_new_lesson_411
инициализация  репозитория git init
(глобальная настройка git config --global user.email "user@mail.com"
                      git config --global user.name "username"
) 
открытие папки в vscode code .
создаем файл 1.txt
------------Создание коммитов-------------------
индексация файлов git add .
проверка статуса git status
создание коммита git commit -m "какое-то название"
создание коммита после добавления строчек в файл  git commit -a -m "команды по работе с локальным репозиторием + загрука на github "
добавление изменений в старый коммит git commit --amend -m "команды по работе с локальным репозиторием + загрука на github "
создание коммита после добавления строчек в файл  git commit -a -m "новый коммит "
Добавление тега к вновь созданному коммиту-->git tag new_commit
---------------Удаление коммитов/тегов/индексации-------------
сброс до предиущего коммита git reset --hard new_commit 
просмотр истории (увидим отменные коммиты) git log --all
***до индексирования
вносим изменение в файл 1.txt, сохраняем
git checkout hello.html->cat 1.txt
проверка статуса  git status
***
вносим изменение в файл 1.txt, сохраняем
индексируем git add 1.txt
сброс области подготовки git reset HEAD 1.txt
переключаемся на   версию коммита git checkout 1.txt
проверка статуса git status
***отмена коммитов
вносим изменение в файл 1.txt, сохраняем
индексируем git add 1.txt
закоммитим git commit -m "Закоммитили для удаления коммита"
git revert HEAD -отменяем  последний произведенный  коммита

***удаление тега
вносим изменение в файл 1.txt, сохраняем
индексируем git add 1.txt
создание коммита после добавления строчек в файл  git commit  -m "коммит для удаления тега "
добавление тега git tag new1
удаление тега git tag -d new1
git log --all ->тега уже не будет в истории

-------------Создание ветки--------------
создаем доп ветку(на случай если хоти проверить код) git switch -c new_branch
git status проверка-перейдем в новую ветку
вносим изменения, сохраяняем
индексируем вновой ветке  git add 1.txt
коммитим git commit -m "коммит в новой ветке"
добавим тег git tag v1
переход на главную ветку git switch main
переход на ветку git switch new_branch
просмотр изменений в конкретном файле git log 1.txt
просмотр различий git show v1
переименуем файл mv 1.txt main.txt
перпемещение файла git mv main.txt first_library/main.txt

***
перейдем на ветку git switch new_branch
добавим файл 3.txt
проиндексируем файл git add 3.txt
закоммитим git commit  -m "3txt файл первый раз "
смотрим текущие ветки git log --all --graph
----------Слияние веток-------------
остаемся в ветке new_branch
ветку new_branch сливаем вмете с main    git merge main
-----------Удаление ветки------
создадим новую ветку git switch -c future_deleted_branch
просмотр веток git branch
просмотр веток (даже удаленных) git branch -a
удаление ветки git branch -d future_deleted_branch
----------------клонирование репозитория----------
git clone  instruct_new_lesson_411 instruct_clone_lesson_411
----------------------------------------------------------------
Робата с удаленными репозиториями

------------------------------------------------------------------------
создаем папку, заходим в нее 
подключение локального репозитория к github           git remote add origin  https://github.com/MaksB87/instruct_new_lesson_411.git
отправка в репозиторий git push -u origin --all(первый раз)

-----------------------------------Выгрузка проекта с github----------------------
создание папки и скачивание туда проекта с github      git clone https://github.com/MaksB87/instruct_new_lesson_411-.git lesson_instruct_2
------------------------------------Отправка изменений на github------------------
создаем коммит  git commit -a -m "создание папки и скачивание туда проекта"
отправляем git push
----------------------------Получение изменений в файле  с github---------------------------
получаем иизменения, которые сделали в файле на сайте github     git pull
-----------------------------------------------------------------------------------------------

